name: Build and Deploy to GitHub Pages and Weekly Archive

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  check-archive-status:
    runs-on: ubuntu-latest
    outputs:
      should_archive: ${{ steps.check.outputs.should_archive }}
    steps:
      - name: Check out the repository
        uses: actions/checkout@v3

      - name: Determine if archive should be executed
        id: check
        run: |
          # If manually triggered, force archive
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            echo "Manually triggered workflow, forcing archive."
            echo "should_archive=true" >> $GITHUB_OUTPUT
            exit 0
          fi

          # Check if deploy.yaml was modified
          if git rev-parse HEAD~1 >/dev/null 2>&1; then
            DEPLOY_CHANGED=$(git diff HEAD~1 --name-only | grep -c '^deploy.yaml$' || echo 0)
          else
            DEPLOY_CHANGED=0
          fi

          if [[ "$DEPLOY_CHANGED" -gt 0 ]]; then
            echo "Deploy.yaml file changed, triggering archive."
            echo "should_archive=true" >> $GITHUB_OUTPUT
            exit 0
          fi

          # Check if the archive was already created this week
          if git ls-remote --exit-code origin weekly-achieve >/dev/null 2>&1; then
            LAST_ARCHIVE_DATE=$(git log origin/weekly-achieve --pretty=format:"%cs" | head -1 || echo "1970-01-01")
          else
            LAST_ARCHIVE_DATE="1970-01-01"
          fi

          CURRENT_WEEK=$(date +%Y-%U)
          LAST_ARCHIVE_WEEK=$(date -d "$LAST_ARCHIVE_DATE" +%Y-%U || echo "1970-01")
          if [[ "$CURRENT_WEEK" != "$LAST_ARCHIVE_WEEK" ]]; then
            echo "should_archive=true" >> $GITHUB_OUTPUT
          else
            echo "should_archive=false" >> $GITHUB_OUTPUT
          fi

  build:
    if: ${{ needs.check-archive-status.outputs.should_archive == 'true' }}
    needs: check-archive-status
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repository
        uses: actions/checkout@v3

      - name: Update apt-get package lists
        run: sudo apt-get update

      - name: Install TeX Live and dependencies
        run: |
          sudo apt-get install -y \
            texlive-xetex \
            texlive-fonts-recommended \
            texlive-latex-extra \
            texlive-lang-chinese \
            latexmk

      - name: Install siunitx package
        run: sudo apt -y install texlive-science

      - name: Compile LaTeX document using latexmk
        run: |
          latexmk -xelatex -synctex=1 -interaction=nonstopmode main.tex

      - name: Copy compiled PDF to public folder
        run: |
          mkdir -p public
          mv main.pdf public/

      - name: Deploy to gh-pages branch
        uses: peaceiris/actions-gh-pages@v3
        with:
          personal_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public
          publish_branch: gh-pages
